<?xml version="1.0" encoding="utf-8"?>



<mx:VBox
   xmlns:mx="http://www.adobe.com/2006/mxml"
   width="100%"
   height="100%"
   verticalGap="0"
   verticalScrollPolicy="off"
   horizontalScrollPolicy="off">

   <mx:Script>
      <![CDATA[
         import org.flexunit.flexui.controls.FlexUnitLabels;
         import org.flexunit.flexui.data.AbstractRowData;
         import org.flexunit.flexui.data.TestRunnerBasePresentationModel;
         import mx.core.ScrollPolicy;

         private var _model : TestRunnerBasePresentationModel;

         public function set model( value : TestRunnerBasePresentationModel ) : void
         {
            _model = value;
         }

         public function onAllTestsEnd() : void
         {
            allTestsHierarchyTree.dataProvider = _model.dataProvider;
            allTestsHierarchyTree.selectable = true;
            allTestsHierarchyTree.verticalScrollPolicy = ScrollPolicy.ON;
         }

         public function launchTests() : void
         {
            allTestsHierarchyTree.dataProvider = _model.dataProvider;
            allTestsHierarchyTree.selectable = false;
            allTestsHierarchyTree.verticalScrollPolicy = ScrollPolicy.OFF;
         }

         public function refreshTree() : void
         {
            if ( _model.dataProvider.length > 0 ) // This is to avoid node collapsing when filtering
            {
               var firstTestCase : Object = _model.dataProvider.getItemAt( 0 );

               if ( allTestsHierarchyTree.isItemOpen( firstTestCase ) )
               {
                  allTestsHierarchyTree.expandItem( firstTestCase, false );
                  allTestsHierarchyTree.expandItem( firstTestCase, true );
               }
               else
               {
                  allTestsHierarchyTree.expandItem( firstTestCase, true );
                  allTestsHierarchyTree.expandItem( firstTestCase, false );
               }
            }
            else
            {
               allTestsHierarchyTree.dataProvider = _model.dataProvider;
            }
         }

         public function updateScrollPosition() : void
         {
            var currentScrollPos : int = allTestsHierarchyTree.verticalScrollPosition;
            var newScrollPos : int = allTestsHierarchyTree.selectedIndex;

            if ( currentScrollPos < newScrollPos )
            {
               // Going up
            }
            else if ( currentScrollPos >= newScrollPos )
            {
               // Going down
            }

            if ( newScrollPos < 6 )
            {
               newScrollPos = 0;
            }

            if ( newScrollPos > allTestsHierarchyTree.maxVerticalScrollPosition )
            {
               newScrollPos = allTestsHierarchyTree.maxVerticalScrollPosition;
            }
         }

         private function onTestTreeItemSelected( event : Event ) : void
         {
            _model.rowSelected = AbstractRowData( Tree( event.currentTarget ).selectedItem );
         }

         private function handleTreeHeaderResize() : void
         {
            resultUI.x = treeHeader.width - 320;
            assertionUI.x = treeHeader.width - 270;
            expectedUI.x = treeHeader.width - 220;
            actualUI.x = treeHeader.width - 120;
         }

      ]]>
   </mx:Script>

   <mx:Glow
      id="filterChangedEffect"
      duration="500"
      color="#DDDDDD"
      alphaFrom="1.0" alphaTo="0" 
      blurXFrom="0.0" blurXTo="30.0" 
      blurYFrom="0.0" blurYTo="10.0" 
      strength="5"
      />
   
   <mx:HBox
      id="treeHeader"
      width="100%"
      backgroundColor="#F2F2F2"
      borderStyle="solid"
      borderColor="#B7BABC"
      borderSides="left top right"
      borderThickness="1"
      verticalScrollPolicy="off"
      horizontalScrollPolicy="off"
      paddingLeft="10"
      paddingRight="20"
      resize="handleTreeHeaderResize()"
      >

      <mx:Label
         id="caseName"
         text="{ FlexUnitLabels.CASE }"
         width="100%"
         x="20"
         paddingTop="4"
         paddingBottom="2"
         />

      <mx:Label
         id="resultUI"
         width="50"
         text="{ FlexUnitLabels.RESULT }"
         paddingTop="4"
         paddingBottom="2"
         />

      <mx:Label
         id="assertionUI"
         width="50"
         text="{ FlexUnitLabels.ASSERTS }"
         toolTip="{ FlexUnitLabels.ASSERTIONS_PER_TEST }"
         paddingTop="4"
         paddingBottom="2" visible="false"
         />

      <mx:Label
         id="expectedUI"
         width="120"
         text="{ FlexUnitLabels.EXPECTED }"
         paddingTop="4"
         paddingBottom="2"
         />

      <mx:Label
         id="actualUI"
         width="120"
         text="{ FlexUnitLabels.ACTUAL }"
         paddingTop="4"
         paddingBottom="2"
         />

   </mx:HBox>

   <mx:Tree
      id="allTestsHierarchyTree"
      styleName="flexUnitTree"
      width="100%"
      height="100%"
      rowHeight="26"
      openDuration="100"
      defaultLeafIcon="{ null }"
      folderClosedIcon="{ null }"
      folderOpenIcon="{ null }"
      verticalScrollPolicy="on"
      itemRenderer="org.flexunit.flexui.controls.left.itemRenderer.TestResultTreeItemRenderer"
      change="onTestTreeItemSelected( event )"
      />

</mx:VBox>
